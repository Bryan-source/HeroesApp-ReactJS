{"version":3,"sources":["assets/heroes sync /^/.*$","assets/heroes/dc-arrow.jpg","assets/heroes/dc-batman.jpg","assets/heroes/dc-black.jpg","assets/heroes/dc-blue.jpg","assets/heroes/dc-flash.jpg","assets/heroes/dc-green.jpg","assets/heroes/dc-martian.jpg","assets/heroes/dc-robin.jpg","assets/heroes/dc-superman.jpg","assets/heroes/dc-wonder.jpg","assets/heroes/marvel-captain.jpg","assets/heroes/marvel-cyclops.jpg","assets/heroes/marvel-daredevil.jpg","assets/heroes/marvel-hawkeye.jpg","assets/heroes/marvel-hulk.jpg","assets/heroes/marvel-iron.jpg","assets/heroes/marvel-silver.jpg","assets/heroes/marvel-spider.jpg","assets/heroes/marvel-thor.jpg","assets/heroes/marvel-wolverine.jpg","assets/heroes/marvel_dc_Background.jpg","auth/AuthContext.js","types/types.js","auth/authReducer.js","hooks/useForm.js","components/login/LoginScreen.js","components/ui/Navbar.js","data/heroes.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublishers.js","components/marvel/MarvelScreen.js","components/dc/DcScreen.js","components/search/SearchScreen.js","selectors/getHeroByName.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","AuthContext","createContext","types","authReducer","state","action","type","payload","logged","useForm","initializeForm","useState","formState","setFormState","reset","handleInputChange","target","name","value","LoginScreen","history","lastPath","localStorage","getItem","dispatch","useContext","userName","className","onSubmit","preventDefault","trim","length","replace","placeholder","onChange","Navbar","user","useHistory","to","activeClassName","exact","onClick","heroes","heroImages","require","HeroScreen","heroId","useParams","hero","useMemo","find","superhero","publisher","alter_ego","first_appearance","characters","src","default","alt","push","goBack","HeroCard","style","maxWidth","HeroList","includes","filter","getHeroesByPublishers","MarvelScreen","DcScreen","SearchScreen","location","useLocation","queryString","parse","search","q","heroName","heroFiltered","toLocaleLowerCase","getHeroByName","autoComplete","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b490abdf.chunk.js","sourcesContent":["var map = {\n\t\"./dc-arrow.jpg\": 35,\n\t\"./dc-batman.jpg\": 36,\n\t\"./dc-black.jpg\": 37,\n\t\"./dc-blue.jpg\": 38,\n\t\"./dc-flash.jpg\": 39,\n\t\"./dc-green.jpg\": 40,\n\t\"./dc-martian.jpg\": 41,\n\t\"./dc-robin.jpg\": 42,\n\t\"./dc-superman.jpg\": 43,\n\t\"./dc-wonder.jpg\": 44,\n\t\"./marvel-captain.jpg\": 45,\n\t\"./marvel-cyclops.jpg\": 46,\n\t\"./marvel-daredevil.jpg\": 47,\n\t\"./marvel-hawkeye.jpg\": 48,\n\t\"./marvel-hulk.jpg\": 49,\n\t\"./marvel-iron.jpg\": 50,\n\t\"./marvel-silver.jpg\": 51,\n\t\"./marvel-spider.jpg\": 52,\n\t\"./marvel-thor.jpg\": 53,\n\t\"./marvel-wolverine.jpg\": 54,\n\t\"./marvel_dc_Background.jpg\": 55\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","export default __webpack_public_path__ + \"static/media/dc-arrow.15b27bc2.jpg\";","export default __webpack_public_path__ + \"static/media/dc-batman.ab9eadc3.jpg\";","export default __webpack_public_path__ + \"static/media/dc-black.3747c663.jpg\";","export default __webpack_public_path__ + \"static/media/dc-blue.cc8169a3.jpg\";","export default __webpack_public_path__ + \"static/media/dc-flash.b3922f25.jpg\";","export default __webpack_public_path__ + \"static/media/dc-green.01c54ee1.jpg\";","export default __webpack_public_path__ + \"static/media/dc-martian.78565f7d.jpg\";","export default __webpack_public_path__ + \"static/media/dc-robin.ea4afe99.jpg\";","export default __webpack_public_path__ + \"static/media/dc-superman.e9391474.jpg\";","export default __webpack_public_path__ + \"static/media/dc-wonder.970ba2d6.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-captain.d2c7774d.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-cyclops.f1442408.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-daredevil.2f4f1a57.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-hawkeye.1f78e874.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-hulk.d1af5fe5.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-iron.b394df11.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-silver.1d43a08b.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-spider.054016b4.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-thor.c63e651c.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-wolverine.ee676488.jpg\";","export default __webpack_public_path__ + \"static/media/marvel_dc_Background.aa81f59d.jpg\";","\r\n\r\n/* En concreto, un componente de orden superior es una función que recibe un componente y devuelve un nuevo componente.\r\nEl nombre lleva mayúsculas por lo mismo de que es un higherOrderComponent\r\nconst EnhancedComponent = higherOrderComponent(WrappedComponent);\r\nMientras que un componente transforma props en interfaz de usuario, un componente de orden superior transforma un componente en otro. */\r\n\r\n/* Este componente no necesita ser probado debido a que esto ya es cuestión de React en sí */\r\nimport { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext();","\r\n/* Los types en este caso sirve para tener un nombre estandar de un elemento que se va a utilizar en la aplicación y no escribir ese nombre libremente ya que podemos escribirlo mal\r\n\r\npone [auth] login para ser más específicos de a que archivo se asocia ese type */\r\n\r\nexport const types = {\r\n    login: '[auth] login',\r\n    logout: '[auth] logout'\r\n}","//Autentificar cuando haces login\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                /* ...action.payload se puede mandar el nombre del usuario el email etc cuando se haga login. */\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n            \r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {useState} from 'react';\r\n\r\nexport const useForm = (initializeForm = {}) => {\r\n    \r\n    const [formState, setFormState] = useState(initializeForm);\r\n\r\n    const reset = () => {\r\n        setFormState({});\r\n    }\r\n    \r\n    //Este método usa e.target pero aquí desestrucramos el target para sólo usar target.elemento\r\n    //El target hace referencia al input \r\n    const handleInputChange = ({target}) => {\r\n\r\n        \r\n        //Hacemos que el value del input se almacene en su respectivo objeto tomando como referencia la propiedad de name = '' del input.\r\n        setFormState({\r\n            ...formState,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n    \r\n    return [formState, handleInputChange, reset];\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nimport { types } from '../../types/types';\r\n\r\n\r\nexport const LoginScreen = ({history}) => {\r\n\r\n    /* localStorage */\r\n    const lastPath = localStorage.getItem('lastPath') || '/';\r\n\r\n    //useContext\r\n    const {dispatch} = useContext(AuthContext);\r\n\r\n    //useForm\r\n    const [{userName}, handleInputChange] = useForm({\r\n        userName: ''\r\n    });\r\n\r\n    const handleLogin = (e) => {\r\n        \r\n        e.preventDefault();\r\n    \r\n        if (userName.trim().length <= 2){\r\n            return;\r\n        }\r\n\r\n        const loginUser = {\r\n            name: userName\r\n        }\r\n\r\n        dispatch({\r\n            type: types.login,\r\n            payload: loginUser\r\n        });\r\n\r\n        /* PUSH: redirecciona a un URL que esté asociado con el router, es decir redirecciona de la página actual a otra página.  */\r\n        //history.push('/');\r\n\r\n        /* REPLACE: Reemplaza la página actual por el URL que se asigne, es decir si reemplazamos la página, al dar a la flecha atrás ya no va a volver a la que estábamos.  */\r\n        history.replace(lastPath);\r\n    }\r\n\r\n    return (\r\n        <div className = \"container mt-5\">\r\n            <h1 className=\"text-white\">Login</h1>\r\n            <hr/>\r\n\r\n            <form onSubmit = {handleLogin}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\" \r\n                        id = \"exampleInputText1\"\r\n                        name = \"userName\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Write your name\"\r\n                        value= {userName}\r\n                        onChange = {handleInputChange}\r\n                    />       \r\n                </div>        \r\n\r\n                <button className = \"btn btn-primary\" type=\"submit\"> Login </button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {user:{name}, dispatch} = useContext(AuthContext);\r\n\r\n    const history = useHistory();\r\n    const handleLogout = () => {\r\n        \r\n        //cualquier usuario que haya se borra con el logout\r\n        dispatch({\r\n            type: types.logout\r\n        });\r\n\r\n        /* Para navegar al login se pdría usar el history.replace asignando como prop del Navbar {history} \r\n        pero esto no va a funcionar debido a que en el DashboardRoutes este componente no está definido dentro \r\n        de un Route por lo tanto no heredó las props del history entonces hay que crear el hook useHistory para que funcione   */\r\n\r\n        history.replace('/login');\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Marvel DC\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n\r\n                    <span className = 'nav-item nav-link text-info mr-2'>\r\n                        {name}\r\n                    </span>\r\n\r\n                    <button \r\n                        className=\"nav-item nav-link btn btn-outline-info\"\r\n                        onClick = {handleLogout}                         \r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React, { useMemo } from 'react';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\nimport { getHeroById } from '../../selectors/getHeroById';\r\n\r\n/* Le permite pasar un directorio para buscar, una bandera que indica si también se deben buscar subdirectorios y una expresión regular para comparar archivos. */\r\nconst heroImages = require.context('../../assets/heroes', true);\r\n\r\nexport const HeroScreen = ({history}) => {\r\n\r\n    //Extrae el argumento del URL en este caso el argumento del URL es el heroId que hace referencia desde: /hero/:heroId  es decir desde: http://localhost:3000/hero/dc-batman\r\n    const {heroId} = useParams(); \r\n\r\n    //Este useMemo memoriza el id obtenido para no volverlo a llamar o a cargar si manipulamos al mismo dentro de la página, solamente si heroId cambia se recargaría la info y memorizaría el otro heroId\r\n    const hero = useMemo(() => getHeroById(heroId), [heroId]);\r\n\r\n    /* Este condicional evalua que el argumento del URL no sea undefined poerque si lo es nos manda error en este caso lo evalúa y si es undefined redirecciona a la página principal */\r\n    if (!hero)\r\n    {\r\n        return <Redirect to = '/'/>;\r\n    }\r\n\r\n    const handleReturn = () => {\r\n        /* if (publisher === 'DC Comics'){\r\n            history.push('/dc');\r\n        }\r\n        if (publisher === 'Marvel Comics'){\r\n            history.push('/marvel');\r\n        } */\r\n\r\n        //Forma sencilla\r\n        //Esta condición es necesaria debido a que si alguien comparte este HomeScreen a alguna persona esta la abre en su navegador pero no tiene historial de navegación dentro de la app por lo que si presiona el botón de Back lo va a sacar de la aplicación por es que si el tamaño del historial de navegación es <= a 2 al presionar back va a redirigir al usuario al homepage.\r\n        if (history.length <=2)\r\n        {\r\n            history.push('/');\r\n        }else{\r\n            history.goBack();\r\n        }\r\n    }\r\n    //Aquí se desestructuró los parámetros del objeto extraído desde el getHeroById\r\n    const {\r\n        superhero, \r\n        publisher, \r\n        alter_ego,\r\n        first_appearance,\r\n        characters\r\n    } = hero\r\n\r\n    return (\r\n        <div className = \"row mt-5\">\r\n            <div className = \"col-4\">\r\n                <img\r\n                    /* src = {`../assets/heroes/${heroId}.jpg`} */\r\n                    src = {heroImages(`./${heroId}.jpg`).default}\r\n                    alt = { superhero }\r\n                    className = \"img-thumbnail animate__animated animate__zoomInLeft\"\r\n                />\r\n            </div>\r\n\r\n            <div className = \"col-8\">\r\n                <div className = \"card text-white bg-dark animate__animated animate__fadeIn\">\r\n                    <h3 className= \"card-header\">{superhero}</h3>\r\n    \r\n                    <div className=\"card-body\">\r\n                        <ul className=\"list-group list-group-flush text-center\">\r\n                            <li className=\"list-group-item text-white bg-dark\"><b>Alter ego: </b>{alter_ego}</li>\r\n                            <li className=\"list-group-item text-white bg-dark\"><b>Publisher: </b>{publisher}</li>\r\n                            <li className=\"list-group-item text-white bg-dark\"><b>First appearance: </b>{first_appearance}</li>\r\n                        </ul>\r\n                        <div className = \"card-body text-white bg-secondary mt-3\" >\r\n                            <h5 className=\"card-title\">Character</h5>\r\n                            <p className=\"card-text\">{characters}</p>\r\n                            <button className=\"btn btn-primary\" onClick = {handleReturn}>Back</button >\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n        \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroById = (id) => {\r\n    \r\n    return heroes.find(hero => hero.id === id);\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst heroImages = require.context('../../assets/heroes', true);\r\n/* Para testeo si es necesario probar más que todo la sección del Link  */\r\nexport const HeroCard = ({\r\n    id,\r\n    superhero, \r\n    publisher, \r\n    alter_ego,\r\n    first_appearance,\r\n    characters\r\n}) => {\r\n    return (\r\n        <div className=\"card ms-3\" style={{maxWidth: 540}}>\r\n            <div className=\"row no-gutters text-white bg-dark\">\r\n                <div className=\"col-md-4\">\r\n                    <img /* src = {`./assets/heroes/${id}.jpg`} */  src = {heroImages(`./${id}.jpg`).default} className=\"card-img\" alt={superhero}/>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className = \"card-title\">{superhero}</h5>\r\n                        <p className = \"card-text\">{alter_ego}</p>\r\n                        {\r\n                            /* Se hace este condicional debido a que hay heroes que tanto su alter_ego como characters son completamente iguales por lo tanto si pasa esto entonces no debería mostrarse dos veces, sólo se mostraría alter_ego pero si este es diferente a character entonces se muestra la sección de characters */\r\n                            (alter_ego !== characters) \r\n                            && <p className=\"card-text\">{characters}</p>\r\n                        }\r\n                        <p className=\"card-text\">\r\n                            <small className=\"text-muted\">{first_appearance}</small>\r\n                        </p>\r\n\r\n                        <Link to ={ `./hero/${id}`}>\r\n                            Más...\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroesByPublishers } from '../../selectors/getHeroesByPublishers'\r\nimport { HeroCard } from './HeroCard';\r\n\r\nexport const HeroList = ({publisher}) => {\r\n\r\n    //Este useMemo memoriza el publisher obtenido para no volverlo a llamar o a cargar si manipulamos al mismo dentro de la página, solamente si publisher cambia se recargaría la info y memorizaría el otro publisher.\r\n    //esto optimiza lapágina\r\n    const heroes = useMemo(() => getHeroesByPublishers(publisher), [publisher]);\r\n\r\n    return (\r\n        <div className = \"card-columns animate__animated animate__fadeIn\">\r\n            {\r\n                heroes.map(hero => (\r\n                    <HeroCard\r\n                        key = {hero.id}\r\n                        {...hero} /* esta sintaxis obtiene todos las propiedades del objeto del hero */\r\n                    />                   \r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\n\r\nexport const getHeroesByPublishers = (publisher) => {\r\n    const validPublisher = ['DC Comics', 'Marvel Comics'];\r\n\r\n    //Validación para que el publisher esté bien escrito\r\n    if (!validPublisher.includes(publisher))\r\n    {   \r\n        throw new Error(`Publisher\" ${publisher} \" es incorrecto`);\r\n    }\r\n\r\n    return heroes.filter(hero => hero.publisher === publisher);\r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1 className = \"text-white\">Marvel Screen</h1>\r\n            <HeroList publisher = {'Marvel Comics'}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\n/* No es necesario meterlo a testeo porque sólo se haría un snapshot */\r\nexport const DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1 className = \"text-white\">Dc Screen</h1>\r\n            <HeroList publisher = {'DC Comics'}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport queryString from 'query-string';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { HeroCard } from '../heroes/HeroCard';\r\nimport {useLocation} from 'react-router-dom'\r\nimport { getHeroByName } from '../../selectors/getHeroByName';\r\n\r\n/* queryString es una librería de node que nos permite parsear los elementos abstractos del URL, organizandolos en un objeto con su respectivo valor, de este modo podemos acceder al query del URL search?q=react haciendo un queryString.parse() para obtener q = react y manipularlo */\r\n\r\n/* Se pretende crear un query en la URL para que si al filtar un personaje, entramos en la card de ese personaje y al regresar a la anterior página, me va a conservar el query del URL, es decir, al volver vamos a tener la página anterior (form) tal como la dejamos. */\r\n\r\nexport const SearchScreen = ({history}) => {\r\n\r\n    const location = useLocation();\r\n    const {q = ''} = queryString.parse(location.search);\r\n\r\n    //useForm\r\n    /* heroName se lo iguala a q para que me devuelva un string vacío y no un undefine */\r\n    const [{heroName}, handleInputChange] = useForm({\r\n        heroName: q\r\n    });\r\n    \r\n    \r\n    //useMemo\r\n    //Con el useMemo evitamos que todo el tiempo que se escriba en el input un heroe, este cambie a cada rato y se muestren lo heroes antes de hacer submit\r\n    const heroFiltered = useMemo(() => getHeroByName(q), [q] );\r\n    \r\n    //Me gusta que por ir presionando letras se vayan mostrando heroes que coincidan con ese nombre sin presionar submit\r\n    //const heroFiltered = getHeroByName(heroName);\r\n\r\n\r\n    //handleSubmit\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (heroName.trim().length <= 2){\r\n            return\r\n        }\r\n\r\n        history.push(`?q=${heroName}`);\r\n           \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className = \"text-white\">Search Screen</h1>\r\n            <hr/>\r\n\r\n            <div  className=\"row\">\r\n                <div className = \"col-5\">\r\n                    <h4 className = \"text-white\">Search Form</h4>\r\n                    <hr/>\r\n\r\n                    <form onSubmit = {handleSubmit}>\r\n                        <input\r\n                            type = \"text\"\r\n                            name = \"heroName\"\r\n                            placeholder = \"Find your hero\"\r\n                            className = \"form-control\"\r\n                            value = {heroName}\r\n                            autoComplete = \"off\"\r\n                            onChange = {handleInputChange}\r\n                        />\r\n\r\n                        <button\r\n                            type = \"submit\"\r\n                            className = \"btn mt-2 btn-block btn-dark\"                                \r\n                        >\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className = \"col-7\">\r\n                    <h4 className = \"text-white\">Results</h4>\r\n                    <hr/>\r\n                    {\r\n                        (q === '')\r\n                        &&\r\n                        <div className = \"alert alert-info\">\r\n                            Search a Hero\r\n                        </div>\r\n                    }\r\n                    {\r\n                        (q !== '' && heroFiltered.length === 0)\r\n                        &&\r\n                        <div className = \"alert alert-danger\">\r\n                            There's no hero with {q}\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        heroFiltered.map(hero => (\r\n                            <HeroCard\r\n                                key = {hero.id}\r\n                                {...hero}\r\n                            />\r\n                        ))\r\n                        \r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\"\r\n\r\n\r\nexport const getHeroByName = (name = '') => {\r\n    if (name === ''){\r\n        return [];\r\n    } \r\n\r\n    name = name.toLocaleLowerCase();\r\n    //Va a mandar al heroe que incluya el nombre en la búsqueda es decir si sólo busco verde entonces me va a aparecer linterna verde\r\n    return heroes.filter(hero => hero.superhero.toLocaleLowerCase().includes(name));\r\n}\r\n","import React from 'react'\r\nimport { Navbar } from '../components/ui/Navbar'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { HeroScreen } from '../components/heroes/HeroScreen';\r\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\r\nimport { DcScreen } from '../components/dc/DcScreen';\r\nimport { SearchScreen } from '../components/search/SearchScreen';\r\n\r\n//La diferencia entre con el AppRouter es que este no tiene router solamente tiene las rutas y el navbar\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n        {/* En este punto se observa que el Navbar no se encuentra en una ruta es decir dentro de un (Route) por lo tanto no hereda las props que el route otorga a los elementos que si están dentro de el.*/}\r\n            <Navbar/>\r\n\r\n            <div className = 'container mt-2'>\r\n                <Switch>\r\n                    <Route exact path=\"/marvel\" component = {MarvelScreen}/>                    \r\n                    <Route exact path=\"/hero/:heroId\" component = {HeroScreen}/>\r\n                    <Route exact path=\"/dc\" component = {DcScreen}/>\r\n                    <Route exact path=\"/search\" component = {SearchScreen}/>\r\n\r\n                    <Redirect to = \"/marvel\"/>                                        \r\n                </Switch>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n//Component es el componente que se quiere renderizar como por ejemplo el de login el navbar etc\r\n/* ...rest se refiere al resto de los elementos y va a ser llamado como ...props en el componente*/\r\n\r\n/* Sintaxis de el nombre component debe ser con C mayuscula en caso de no referirnos a la etiqueta html <component>  */\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    /* En los argumentos este ...rest no funciona como spread */\r\n    /* El path ='/' es parte de este rest  */\r\n    ...rest\r\n}) => {\r\n    \r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n    return (\r\n        <Route {...rest}\r\n            /* La arrow function es con parentesis porque retorna algo */\r\n            /* props es un callback que hace referencia a los props del componente que son el history location etc */\r\n            component = {(props) => (\r\n                (isAuthenticated)\r\n                    /* Aquí ...props funciona como spread */\r\n                    ? (<Component {...props}/>)\r\n                    :(<Redirect to='/login'/>)\r\n            )}/>\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n       \r\n    return (\r\n        <Route {...rest}\r\n                component = {(props) => (\r\n                (!isAuthenticated)\r\n                    ? (<Component {...props}/>)\r\n                    :(<Redirect to='/'/>)\r\n            )}/>\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useContext } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n  } from \"react-router-dom\";\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { LoginScreen } from '../components/login/LoginScreen';\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    //useContext donde se definen user y dispatch\r\n    const {user} = useContext(AuthContext);\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component = {LoginScreen}\r\n                        isAuthenticated = {user.logged}\r\n                    />\r\n                        \r\n                    {/* El path es parte del ...rest de PrivateRoute */}\r\n                    {/* En el localStorage guarda el pathname del rest de la respectiva ruta del DashBoard */}\r\n                    <PrivateRoute \r\n                        path=\"/\" \r\n                        component = {DashboardRoutes}\r\n                        isAuthenticated = {user.logged}   \r\n                    />                                    \r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React, { useEffect, useReducer } from 'react'\r\nimport { AuthContext } from './auth/AuthContext'\r\nimport { authReducer } from './auth/authReducer'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport './style.css';\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || {logged: false};\r\n}\r\n\r\nexport const HeroesApp = () => {\r\n\r\n    //Este useReducer ya está creado para toda la app en general, en otros desarrollos se crea el useState para pasar estados, etc\r\n    //En user se guarda todo lo que recibe el dispatch en este caso se guardó el name del form del loginScreen.\r\n    const [user, dispatch] = useReducer(authReducer, {}, init);\r\n\r\n    //useEffect Local Storage\r\n    useEffect(() => {\r\n\r\n        //El localStorage sólo guarda strings, no objetos para eso se utiliza JSON.stringify\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }, [user]);\r\n\r\n    return (\r\n        <AuthContext.Provider value = {{user, dispatch}}>\r\n            <AppRouter/>\r\n        </AuthContext.Provider>       \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\n\nReactDOM.render(  \n  <HeroesApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}